CREATE TABLE video_backup_configs (id INTEGER PRIMARY KEY NOT NULL, name TEXT UNIQUE NOT NULL, video TEXT, comment TEXT, "update" TEXT);
CREATE TABLE subtitles (id LONG PRIMARY KEY NOT NULL, lan TEXT, lan_doc TEXT, content TEXT);
CREATE TABLE users (uid INTEGER PRIMARY KEY NOT NULL, name TEXT NOT NULL, avatar_url TEXT NOT NULL, cookie TEXT NOT NULL, pfs TEXT NOT NULL);
CREATE TABLE backups_fav (fav_id INTEGER PRIMARY KEY NOT NULL, fav_name TEXT NOT NULL, owner_uid INTEGER NOT NULL, owner_name TEXT NOT NULL, backup_user_id INTEGER NOT NULL REFERENCES users (uid), video_backup_enable INTEGER NOT NULL, video_backup_config_id INTEGER NOT NULL REFERENCES video_backup_configs (id));
CREATE TABLE backups_history (uid INTEGER NOT NULL PRIMARY KEY REFERENCES users (uid), auto_delete_method TEXT, delete_by_days INTEGER, delete_by_disk_usage REAL, delete_by_disk_usage_unit TEXT, delete_by_item_quantity INTEGER, release_time_limit_day INTEGER, uploader_black_list TEXT, video_backup_enable INTEGER NOT NULL, video_backup_config_id INTEGER REFERENCES video_backup_configs (id) NOT NULL);
CREATE TABLE backups_uploader (uid INTEGER PRIMARY KEY NOT NULL, name TEXT NOT NULL, "desc" TEXT, avatar_url TEXT NOT NULL, backup_start_time INTEGER, backup_user_id INTEGER REFERENCES users (uid) NOT NULL, video_backup_enable INTEGER NOT NULL, video_backup_config_id INTEGER REFERENCES video_backup_configs (id) NOT NULL, dynamic_backup_enable INTEGER NOT NULL, dynamic_backup_config TEXT, article_backup_enable INTEGER NOT NULL, article_backup_config TEXT, live_recording_enable INTEGER NOT NULL, live_recording_config TEXT);
CREATE TABLE video_infos (bvid TEXT PRIMARY KEY NOT NULL UNIQUE, avid INTEGER NOT NULL UNIQUE, title TEXT NOT NULL, "desc" TEXT, duration INTEGER NOT NULL DEFAULT (0), owner_mid INTEGER NOT NULL, owner_name TEXT NOT NULL, owner_avatar_url TEXT, "view" INTEGER NOT NULL, danmaku INTEGER NOT NULL, favorite INTEGER NOT NULL, coin INTEGER NOT NULL, "like" INTEGER NOT NULL, share INTEGER NOT NULL, reply INTEGER NOT NULL, tname TEXT, ctime INTEGER NOT NULL, cover_url TEXT, tags TEXT, pages_version_list TEXT, state TEXT, downloading INTEGER NOT NULL, save_time INTEGER NOT NULL DEFAULT 0, community_update_time INTEGER NOT NULL DEFAULT 0, config_id INTEGER NOT NULL DEFAULT 0 REFERENCES video_backup_configs (id), total_comment_floor INTEGER NOT NULL DEFAULT (0));
CREATE TABLE video_update_plans (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, timestamp INTEGER NOT NULL, uid INTEGER NOT NULL REFERENCES users (uid), bvid TEXT NOT NULL, avid INTEGER NOT NULL, title TEXT, update_video_and_danmaku INTEGER NOT NULL, video_quality INTEGER, video_codec_id INTEGER, comment_config_1 TEXT, comment_config_2 TEXT, comment_config_3 TEXT);
CREATE TABLE videos_history (uid INTEGER NOT NULL REFERENCES users (uid), bvid TEXT NOT NULL REFERENCES video_infos (bvid), avid INTEGER NOT NULL REFERENCES video_infos (avid), view_at INTEGER NOT NULL, PRIMARY KEY (uid, bvid));
CREATE INDEX uhv_uid_index ON videos_history (uid);
CREATE TABLE videos_favorite (fav_id INTEGER NOT NULL REFERENCES backups_fav (fav_id), bvid TEXT NOT NULL REFERENCES video_infos (bvid), avid INTEGER NOT NULL REFERENCES video_infos (avid), fav_time INTEGER NOT NULL, fav_ban INTEGER DEFAULT (0) NOT NULL, PRIMARY KEY (fav_id, bvid));
CREATE INDEX fav_id_index ON videos_favorite (fav_id);
CREATE TABLE videos_uploader (uid INTEGER NOT NULL REFERENCES backups_uploader (uid), bvid TEXT NOT NULL REFERENCES video_infos (bvid), avid INTEGER NOT NULL REFERENCES video_infos (avid), created INTEGER NOT NULL, PRIMARY KEY (uid, bvid));
CREATE TABLE emote (id INTEGER PRIMARY KEY NOT NULL, text TEXT NOT NULL, size INTEGER NOT NULL, url TEXT NOT NULL, file_name TEXT NOT NULL);

INSERT INTO video_backup_configs (id, name, video, comment, "update") VALUES (0,'FINAL',null,null,null);